use std::collections::HashMap;

static INPUT: &str = "957,596 -> 957,182\n763,144 -> 69,144\n761,794 -> 911,944\n510,440 -> 147,440\n859,33 -> 859,409\n602,518 -> 748,518\n980,545 -> 676,241\n60,528 -> 616,528\n37,242 -> 37,892\n216,966 -> 216,120\n372,910 -> 372,307\n688,864 -> 94,864\n691,17 -> 167,17\n989,928 -> 989,816\n207,84 -> 982,84\n890,714 -> 502,326\n286,329 -> 686,329\n959,62 -> 460,62\n840,82 -> 780,82\n960,12 -> 14,958\n418,45 -> 983,610\n318,264 -> 988,934\n458,11 -> 861,11\n805,197 -> 380,622\n261,907 -> 261,734\n409,617 -> 826,617\n285,457 -> 759,931\n104,241 -> 913,241\n781,141 -> 781,671\n48,956 -> 348,956\n921,517 -> 974,517\n565,621 -> 724,621\n381,276 -> 381,59\n82,25 -> 946,25\n978,16 -> 17,977\n850,438 -> 125,438\n313,850 -> 313,195\n789,963 -> 789,29\n110,156 -> 241,156\n925,974 -> 458,974\n93,153 -> 696,756\n748,312 -> 120,312\n566,367 -> 360,367\n687,295 -> 687,284\n219,925 -> 180,925\n59,952 -> 59,140\n641,333 -> 361,53\n158,587 -> 158,96\n857,278 -> 857,195\n653,45 -> 34,664\n639,384 -> 814,384\n67,24 -> 902,859\n850,278 -> 850,448\n342,505 -> 342,287\n504,924 -> 536,956\n408,666 -> 408,310\n747,347 -> 747,176\n766,468 -> 54,468\n283,905 -> 283,421\n476,334 -> 476,59\n490,935 -> 753,672\n385,772 -> 940,772\n907,316 -> 853,370\n144,717 -> 746,115\n741,819 -> 230,819\n524,397 -> 524,237\n411,824 -> 288,824\n160,719 -> 744,135\n252,550 -> 440,738\n902,64 -> 902,422\n392,194 -> 955,757\n937,735 -> 937,446\n292,49 -> 985,49\n899,464 -> 481,46\n304,369 -> 648,369\n247,723 -> 247,697\n665,941 -> 185,461\n548,25 -> 446,127\n663,558 -> 154,558\n52,47 -> 872,867\n983,68 -> 983,795\n492,705 -> 654,867\n82,888 -> 33,888\n550,443 -> 229,764\n868,508 -> 375,15\n120,829 -> 652,829\n787,296 -> 814,296\n705,643 -> 351,643\n52,23 -> 558,23\n390,92 -> 390,393\n713,520 -> 897,520\n280,481 -> 827,481\n599,181 -> 599,235\n483,140 -> 773,140\n571,227 -> 571,779\n830,45 -> 830,745\n617,745 -> 449,745\n89,176 -> 841,928\n358,868 -> 906,320\n897,669 -> 654,669\n717,729 -> 123,135\n305,330 -> 305,598\n220,964 -> 600,964\n607,715 -> 492,715\n837,561 -> 820,561\n542,38 -> 542,118\n390,970 -> 915,445\n343,160 -> 475,160\n163,60 -> 972,869\n786,500 -> 946,500\n401,393 -> 401,910\n336,962 -> 528,962\n520,489 -> 520,525\n558,584 -> 363,584\n786,880 -> 584,678\n704,435 -> 153,986\n356,522 -> 235,643\n225,67 -> 229,71\n389,381 -> 55,47\n918,229 -> 332,229\n558,989 -> 558,370\n307,821 -> 307,447\n13,232 -> 742,961\n659,809 -> 467,809\n905,942 -> 456,942\n234,810 -> 234,497\n421,287 -> 643,65\n183,164 -> 312,164\n652,955 -> 977,630\n157,820 -> 853,124\n278,480 -> 278,384\n504,399 -> 298,605\n955,76 -> 798,76\n565,352 -> 109,352\n912,16 -> 66,862\n972,786 -> 235,49\n146,15 -> 146,186\n944,149 -> 497,596\n485,84 -> 762,84\n975,983 -> 16,24\n11,896 -> 887,20\n826,924 -> 126,224\n246,648 -> 158,736\n773,377 -> 582,377\n296,947 -> 378,865\n592,291 -> 592,861\n331,470 -> 16,470\n239,85 -> 705,85\n409,842 -> 409,966\n145,438 -> 145,340\n239,859 -> 239,409\n651,508 -> 314,845\n720,39 -> 176,583\n762,444 -> 762,29\n983,962 -> 60,39\n745,248 -> 91,902\n990,18 -> 990,503\n441,472 -> 441,211\n524,837 -> 248,561\n160,215 -> 842,897\n469,544 -> 989,544\n311,241 -> 103,33\n887,610 -> 746,610\n377,942 -> 377,803\n920,401 -> 823,401\n10,142 -> 10,486\n850,955 -> 850,578\n887,728 -> 887,678\n555,749 -> 84,749\n839,620 -> 32,620\n432,709 -> 432,183\n312,164 -> 859,711\n20,119 -> 739,838\n930,871 -> 324,265\n41,702 -> 41,520\n48,210 -> 794,956\n479,526 -> 479,123\n364,739 -> 364,379\n920,969 -> 73,122\n382,314 -> 382,604\n969,877 -> 129,37\n274,893 -> 52,671\n696,296 -> 696,221\n469,735 -> 626,892\n682,435 -> 682,937\n626,550 -> 626,604\n898,904 -> 898,755\n836,849 -> 445,458\n405,237 -> 405,724\n253,74 -> 908,729\n837,802 -> 597,802\n375,450 -> 316,450\n621,784 -> 314,784\n856,136 -> 188,804\n983,11 -> 29,965\n82,134 -> 752,134\n677,299 -> 573,299\n43,726 -> 43,304\n886,629 -> 886,603\n439,471 -> 74,836\n973,879 -> 122,28\n550,246 -> 497,246\n49,109 -> 816,876\n294,493 -> 271,493\n495,397 -> 495,342\n846,892 -> 881,927\n267,397 -> 72,592\n670,168 -> 22,816\n482,302 -> 482,681\n309,692 -> 453,692\n597,369 -> 597,589\n518,475 -> 633,475\n391,484 -> 493,382\n177,135 -> 139,135\n458,17 -> 825,17\n514,292 -> 272,50\n410,734 -> 142,734\n465,975 -> 542,898\n32,901 -> 346,587\n390,478 -> 571,659\n835,839 -> 189,839\n769,407 -> 769,788\n974,40 -> 103,911\n710,709 -> 246,709\n468,857 -> 343,982\n777,552 -> 951,552\n23,490 -> 346,490\n270,384 -> 855,384\n386,454 -> 166,454\n166,388 -> 319,388\n698,514 -> 698,180\n554,162 -> 528,162\n651,363 -> 879,363\n327,123 -> 327,255\n439,492 -> 719,212\n903,438 -> 903,356\n99,611 -> 99,552\n512,652 -> 45,185\n565,284 -> 565,180\n81,710 -> 637,154\n321,769 -> 164,769\n32,307 -> 32,204\n310,338 -> 310,914\n239,691 -> 357,691\n573,164 -> 559,164\n887,961 -> 693,767\n362,904 -> 362,944\n467,294 -> 236,294\n182,53 -> 182,264\n19,950 -> 951,18\n191,575 -> 440,824\n192,168 -> 690,666\n538,552 -> 891,905\n243,38 -> 243,403\n417,140 -> 417,818\n894,45 -> 726,213\n245,898 -> 245,527\n567,946 -> 567,983\n572,675 -> 363,675\n318,618 -> 735,618\n616,580 -> 981,580\n37,881 -> 134,881\n624,675 -> 271,322\n323,686 -> 770,686\n93,385 -> 626,385\n715,382 -> 862,382\n170,342 -> 170,84\n747,221 -> 380,221\n981,311 -> 981,577\n372,186 -> 372,826\n961,91 -> 130,922\n48,603 -> 48,110\n34,975 -> 935,74\n707,18 -> 707,192\n261,149 -> 41,369\n35,589 -> 35,247\n544,522 -> 437,522\n797,712 -> 346,712\n622,47 -> 78,591\n642,390 -> 642,414\n793,29 -> 69,29\n978,905 -> 978,296\n212,515 -> 212,920\n835,166 -> 68,933\n168,742 -> 168,720\n390,276 -> 666,276\n507,792 -> 987,792\n895,242 -> 895,402\n121,950 -> 943,128\n303,336 -> 303,205\n293,390 -> 293,736\n433,963 -> 433,867\n824,327 -> 620,531\n553,689 -> 867,689\n226,984 -> 226,284\n153,308 -> 173,308\n855,959 -> 345,959\n830,895 -> 830,981\n557,63 -> 557,205\n51,857 -> 328,857\n224,243 -> 224,517\n830,773 -> 830,520\n607,210 -> 782,385\n876,330 -> 327,330\n985,11 -> 18,978\n352,936 -> 111,936\n900,39 -> 986,39\n10,626 -> 10,795\n369,942 -> 11,942\n136,770 -> 654,252\n209,541 -> 209,557\n69,671 -> 848,671\n811,451 -> 194,451\n149,46 -> 850,747\n704,386 -> 704,953\n117,346 -> 387,346\n238,701 -> 688,251\n789,220 -> 789,815\n967,512 -> 967,213\n641,652 -> 151,162\n91,942 -> 312,942\n42,226 -> 801,985\n166,37 -> 603,37\n854,976 -> 951,976\n392,23 -> 772,23\n299,196 -> 299,288\n514,560 -> 844,890\n618,699 -> 348,429\n604,947 -> 604,735\n189,851 -> 407,633\n907,719 -> 907,449\n167,421 -> 864,421\n491,383 -> 538,383\n939,504 -> 939,433\n78,649 -> 78,975\n817,246 -> 322,741\n395,195 -> 205,195\n872,275 -> 872,500\n196,621 -> 280,621\n634,619 -> 634,422\n395,30 -> 395,232\n895,628 -> 619,904\n58,66 -> 186,194\n626,477 -> 708,559\n747,712 -> 747,28\n935,798 -> 220,798\n459,530 -> 704,530\n648,679 -> 79,110\n778,135 -> 778,66\n657,352 -> 906,352\n499,160 -> 615,160\n830,226 -> 830,489\n364,971 -> 826,971\n879,923 -> 543,923\n914,984 -> 612,984\n594,810 -> 508,810\n55,467 -> 269,253\n360,478 -> 360,902\n176,890 -> 176,431\n867,121 -> 16,972\n728,876 -> 65,213\n606,112 -> 842,112\n563,532 -> 914,532\n783,139 -> 369,139\n564,359 -> 846,359\n79,326 -> 15,390\n972,419 -> 972,35\n686,839 -> 755,839\n427,856 -> 77,856\n102,410 -> 925,410\n468,177 -> 901,610\n865,249 -> 930,314\n784,447 -> 863,368\n684,708 -> 223,708\n555,228 -> 555,900\n380,600 -> 222,600\n900,408 -> 188,408\n773,677 -> 773,16\n560,287 -> 560,790\n130,851 -> 959,22\n338,951 -> 626,663\n678,726 -> 405,726\n243,469 -> 243,276\n783,486 -> 66,486\n469,536 -> 469,770\n689,148 -> 689,340\n396,689 -> 396,673\n848,759 -> 848,770\n965,775 -> 965,605\n889,907 -> 284,302\n161,169 -> 942,950\n619,267 -> 394,492\n323,786 -> 18,481\n953,643 -> 884,643\n371,446 -> 371,252\n890,915 -> 192,217\n674,259 -> 674,247\n877,479 -> 877,117\n620,843 -> 620,734\n597,722 -> 597,939\n935,663 -> 935,469\n108,844 -> 108,596\n211,447 -> 211,482\n123,657 -> 721,59\n774,858 -> 774,86\n978,500 -> 978,305\n152,890 -> 937,105\n728,356 -> 728,261\n354,373 -> 433,452\n586,627 -> 586,949\n764,381 -> 735,410\n986,899 -> 199,112\n251,418 -> 251,596\n897,379 -> 897,388\n149,901 -> 253,901\n650,229 -> 46,229\n446,707 -> 446,44\n953,898 -> 697,898\n772,422 -> 762,432\n608,756 -> 927,756\n138,911 -> 716,333\n414,583 -> 244,583\n219,267 -> 219,751\n69,746 -> 69,886\n444,243 -> 493,194\n604,950 -> 244,950\n450,198 -> 31,617\n918,852 -> 109,43\n967,800 -> 267,100\n388,516 -> 760,516\n656,954 -> 513,954\n80,680 -> 80,44\n360,848 -> 360,800\n10,10 -> 989,989\n889,927 -> 104,142\n882,187 -> 812,187\n416,522 -> 356,522\n797,795 -> 273,271\n175,371 -> 12,371\n726,595 -> 956,595\n852,355 -> 852,357\n959,83 -> 338,83\n822,766 -> 140,84\n968,129 -> 181,916\n17,28 -> 975,986\n15,913 -> 624,304\n589,322 -> 468,443\n894,21 -> 309,606\n83,25 -> 963,905\n143,380 -> 377,146\n587,151 -> 507,151\n257,967 -> 257,882\n770,552 -> 770,573\n128,90 -> 886,848\n456,953 -> 456,669\n930,434 -> 668,434\n501,835 -> 796,540\n36,980 -> 989,27\n494,690 -> 626,690\n105,945 -> 972,78\n409,730 -> 409,62\n901,160 -> 831,90\n881,490 -> 28,490\n736,244 -> 38,942\n295,770 -> 199,770\n866,416 -> 808,416\n875,716 -> 875,189\n763,393 -> 241,915\n583,237 -> 704,237\n29,153 -> 637,153\n767,282 -> 767,107\n456,242 -> 456,165\n455,232 -> 749,232\n54,128 -> 766,840\n901,73 -> 939,73\n928,118 -> 854,118\n15,983 -> 975,23\n600,92 -> 260,92\n247,714 -> 247,490\n511,332 -> 19,824\n55,15 -> 968,928\n246,29 -> 25,29\n22,101 -> 761,840\n876,177 -> 139,914\n165,150 -> 822,807\n258,707 -> 773,707\n68,788 -> 68,875\n858,142 -> 758,142\n719,642 -> 810,642\n928,904 -> 928,338\n287,977 -> 978,286\n883,13 -> 883,31\n681,301 -> 681,957\n762,863 -> 405,506\n194,657 -> 733,118\n78,41 -> 497,41\n840,627 -> 840,168\n335,54 -> 335,822\n136,983 -> 526,593\n120,156 -> 120,630";

#[derive(Clone, Copy)]
struct Line {
    from: (i32, i32),
    to: (i32, i32),
}

fn parse_point(s: &str) -> (i32, i32) {
    let mut coords = s.split(',').map(|n| n.parse().unwrap());
    (coords.next().unwrap(), coords.next().unwrap())
}

impl Line {
    fn new(s: &str) -> Self {
        let mut points = s.split(" -> ").map(|point| parse_point(point));
        Self {
            from: points.next().unwrap(),
            to: points.next().unwrap(),
        }
    }
}

fn num_overlap(lines: impl Iterator<Item = Line>) -> usize {
    let mut points = HashMap::new();
    for line in lines {
        let dx = (line.to.0 - line.from.0).signum();
        let dy = (line.to.1 - line.from.1).signum();
        let (mut x, mut y) = (line.from.0, line.from.1);
        while (x, y) != (line.to.0 + dx, line.to.1 + dy) {
            *points.entry((x, y)).or_insert(0) += 1;
            x += dx;
            y += dy;
        }
    }
    points.values().filter(|&&n| n > 1).count()
}

fn main() {
    let all_lines: Vec<Line> = INPUT.lines().map(|line| Line::new(line)).collect();
    let horizontal_or_vertical = all_lines
        .iter()
        .copied()
        .filter(|line| line.from.0 == line.to.0 || line.from.1 == line.to.1);
    println!("Part one: {}", num_overlap(horizontal_or_vertical));
    println!("Part two: {}", num_overlap(all_lines.iter().copied()));
}
